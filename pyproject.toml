[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
authors = [
  {name = "pylibjpeg-rle contributors"}
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "Development Status :: 5 - Production/Stable",
    "Natural Language :: English",
    "Programming Language :: Rust",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries",
]
description = """\
    "Python bindings for a fast RLE decoder/encoder, with a focus on "\
    "use as a plugin for pylibjpeg"\
"""
keywords = ["dicom pydicom python rle pylibjpeg rust"]
license = "MIT"
name = "pylibjpeg-rle"
readme = "README.md"
version = "2.0.0"
requires-python = ">=3.8"
dependencies = [
  "numpy>1.24",
]

[project.urls]
homepage = "https://github.com/pydicom/pylibjpeg-rle"

[project.entry-points."pylibjpeg.pixel_data_decoders"]
"1.2.840.10008.1.2.5" = "rle:decode_pixel_data"

[project.entry-points."pylibjpeg.pixel_data_encoders"]
"1.2.840.10008.1.2.5" = "rle:encode_pixel_data"

[tool.coverage.run]
omit = [
    "libjpeg/tests/*",
]

[tool.mypy]
python_version = "3.8"
files = "rle"
exclude = ["rle/tests", "rle/benchmarks"]
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = false
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
